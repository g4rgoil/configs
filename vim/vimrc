""         _
""  __   _(_)_ __ ___  _ __ ___ 
""  \ \ / / | '_ ` _ \| '__/ __|
""   \ V /| | | | | | | | | (__ 
""    \_/ |_|_| |_| |_|_|  \___|
""                              


set nocompatible
set encoding=utf-8
set backupext=.bak

" Add ~/.vim to runtimepath and packpath
if has('nvim')
    set runtimepath+=~/.vim/after runtimepath+=~/.vim
    set packpath+=~/.vim/after packpath+=~/.vim
endif

""" Filetyp turned back on after vundle did its thing
filetype off

"" Plugins
set rtp+=~/.vim/bundle/Vundle.vim

if filereadable(expand("~/.vim/bundle/Vundle.vim/autoload/vundle.vim"))
    silent! call vundle#rc()
        Plugin 'VundleVim/Vundle.vim'

        Plugin 'junegunn/goyo.vim'
        Plugin 'junegunn/vim-easy-align'

        Plugin 'tpope/vim-surround'
        Plugin 'tpope/vim-fugitive'

        Plugin 'vim-airline/vim-airline'
        Plugin 'vim-airline/vim-airline-themes'
        Plugin 'chriskempson/base16-vim'
        
        Plugin 'SirVer/ultisnips'
        Plugin 'honza/vim-snippets'
        Plugin 'pgilad/vim-skeletons'
        Plugin 'davidhalter/jedi-vim'

        Plugin 'scrooloose/nerdtree'
        Plugin 'ap/vim-css-color'
        Plugin 'lervag/vimtex'
        Plugin 'aklt/plantuml-syntax'

        Plugin 'harenome/vim-mipssyntax'
        Plugin 'vim-syntastic/syntastic'
        Plugin 'tfnico/vim-gradle'

        Plugin 'tmhedberg/SimpylFold'
        Plugin 'Konfekt/FastFold'

        Plugin 'Valloric/YouCompleteMe'
        Plugin 'rdnetto/YCM-Generator'
        Plugin 'freitass/todo.txt-vim'
        Plugin 'Raimondi/delimitMate'
endif

"" Indentation
if has('autocmd')
    filetype plugin indent on
    autocmd FileType c,cpp,java,php,python,bash,sh autocmd BufWritePre <buffer> %s/\s\+$//e
endif

"" General
set ruler                       " Show row and column ruler information
set number                      " Show line numbers
set list
set lcs=tab:>-,trail:-,extends:>,precedes:<    " Show tabs as >--- and trailing spaces as -
set linebreak                   " Break lines at work
set showbreak=+++               " Wrap-broken line prefix
set textwidth=120               " Line wrap (after cols)
set wrap
set showmatch                   " Highlight matching braces
set cmdheight=1                 " Number of lines at bottom of screen
set tw=0                        " Don't use automatic line breaks
set backspace=indent,eol,start  " Set the backspace to delete by default
syntax enable                   " Enable syntax highlighting

"" Setting the cursor shape for vim and neovim
if has('nvim')
    if exists("$TMUX")
        set guicursor=n-v-c:block,i-ci-ve:ver25,r-cr:hor20,o:hor50
    endif
else
    if exists("$TMUX")
        let &t_SI = "\ePtmux;\e\e[5 q\e\\"
        let &t_EI = "\ePtmux;\e\e[2 q\e\\"
    else
        let &t_SI = "\e[5 q"
        let &t_EI = "\e[2 q"
    endif
endif

""" Setting support for True color
if has("termguicolors")
    set termguicolors
endif

"let base16colorspace=256  " Access colors present in 256 colorspace

try
    colorscheme base16-darktooth
catch /^Vim\%((\a\+)\)\=:E185/
    colorscheme slate
endtry

set smarttab
set tabstop=4                   " Number of hard-tabstop spaces
set shiftwidth=4                " Number of auto-indent spaces
set expandtab                   " Use spaces instead of tabs
set autoindent

"" Folding
set foldmethod=manual

"" Misc key mappings

"" Configure split behaviour
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

set splitbelow
set splitright

"" Configure tab behaviour
map <C-n> :tabp<CR>
map <C-m> :tabn<CR>

nnoremap <S-T> :NERDTreeToggle<CR>

"" Airline Configuration
set laststatus=2                                    " Always show status bar
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_theme = 'luna'

let g:airline#extensions#whitespace#enabled = 0
let g:airline#extensions#vimtex#enabled = 1

"" Vimtex Configuration
let g:vimtex_compiler_method = 'latexmk'
let g:vimtex_complete_close_braces = 1
let g:vimtex_fold_enabled = 0
let g:vimtex_fold_comments = 1

let g:vimtex_view_general_viewer = 'evince'
let g:vimtex_view_general_options = '--unique file:@pdf\#src:@line@tex'
let g:vimtex_view_general_options_latexmk = '--unique'

"" Skeleton configuration
let skeletons#autoRegister= 1
let skeletons#skeletonsDir=['~/.vim/skeletons','/etc/vim/skeletons']

"" ultisnips configuration
let g:UltiSnipsExpandTrigger='<C-J>'
let g:UltiSnipsJumpForwardTrigger='<C-L>'
let g:UltiSnipsJumpBackwardTrigger='<C-H>'

" let g:UltiSnipsSnippetsDir='~/.vim/snippets/UltiSnips'
let g:UltiSnipsSnippetDirectories=["UltiSnips"]

"" ycm (you complete me) configuration
let g:ycm_global_ycm_extra_conf='~/.vim/bundle/YouCompleteMe/third_party/ycmd/.ycm_extra_conf.py'

let g:ycm_python_binary_path = '/usr/bin/python3'

let g:syntastic_sh_shellcheck_args = "-x"

"" File Type options
let g:markdown_fenced_languages = ['javascript', 'go', 'php']

